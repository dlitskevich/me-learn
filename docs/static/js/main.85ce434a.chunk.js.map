{"version":3,"sources":["services/auth.ts","services/localStorage.ts","hooks/useUser.ts","components/AuthButton.tsx","components/Navigation.tsx","components/About.tsx","components/Home.tsx","components/Error.tsx","components/UtterText.tsx","services/speak.ts","pages/LearnPage/Answer.tsx","hooks/useKeyUp.ts","pages/LearnPage/Learn.tsx","pages/LearnPage/index.tsx","pages/WordsPage/WordsTable.tsx","hooks/useUserDict.ts","pages/WordsPage/index.tsx","pages/TrainPage/ListenButton.tsx","pages/TrainPage/Speech.tsx","hooks/useListenText.ts","pages/TrainPage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","localStorage","getItem","setItem","JSON","stringify","verbs","useUser","useState","user","setUser","useEffect","auth","onAuthStateChanged","AuthButton","undefined","type","className","onClick","signOut","signInWithPopup","GoogleAuthProvider","Navigation","exact","to","activeClassName","About","Home","Error","UtterText","text","children","role","synth","window","speechSynthesis","utterThis","SpeechSynthesisUtterance","speak","Answer","word","content","value","keyValue","console","log","targetKey","action","upHandler","key","addEventListener","removeEventListener","useKeyUp","addWord","lang","dictString","dict","parse","Learn","refresh","style","maxWidth","answersEn","map","el","LearnPage","state","setState","getData","Object","keys","data","Math","floor","random","WordsTable","words","Row","useUserDict","snap","setSnap","firestore","collection","doc","uid","onSnapshot","docSnapshot","exists","WordsPage","getWords","ListenButton","recognition","recording","setRecording","onend","onstart","stop","start","Speech","phrase","webkitSpeechRecognition","continuous","interimResults","maxAlternatives","setText","onresult","event","results","transcript","useListenText","phrases","TrainPage","getPhrase","length","App","path","component","GuardedRoute","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85ce434a.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB22adg1luT9scUmBwhXUIoPTNGfHWJHiM',\n  authDomain: 'me-learn.firebaseapp.com',\n  projectId: 'me-learn',\n  storageBucket: 'me-learn.appspot.com',\n  messagingSenderId: '589740604171',\n  appId: '1:589740604171:web:574f45f58cebe24665800e',\n  measurementId: 'G-0F52F4H0B0',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n","import verbs from '../data/enVerb.json';\n\nif (!localStorage.getItem('verbs')) {\n  localStorage.setItem('verbs', JSON.stringify(verbs));\n}\n","import { useEffect, useState } from 'react';\nimport firebase from 'firebase';\n\nexport const useUser = () => {\n  const [user, setUser] = useState<firebase.User | null>();\n  useEffect(() => firebase.auth().onAuthStateChanged(setUser), []);\n  return user;\n};\n","import React from 'react';\nimport firebase from 'firebase';\nimport { useUser } from '../hooks/useUser';\n\nexport const AuthButton = () => {\n  const user = useUser();\n\n  if (user === undefined) {\n    return null;\n  }\n  if (!user) {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => {\n          firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());\n        }}\n      >\n        Log in\n      </button>\n    );\n  }\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-danger\"\n      onClick={() => {\n        firebase.auth().signOut();\n      }}\n    >\n      Log out\n    </button>\n  );\n};\n","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\nimport { AuthButton } from './AuthButton';\n\nexport const Navigation = () => (\n\n  <nav className=\"navbar nav-pills\">\n    <ul className=\"nav\">\n      <li className=\"nav-item\">\n        <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/about\" className=\"nav-link\" activeClassName=\"active\">About</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/learn\" className=\"nav-link\" activeClassName=\"active\">Learn</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/words\" className=\"nav-link\" activeClassName=\"active\">Words</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/train\" className=\"nav-link\" activeClassName=\"active\">Train</NavLink>\n      </li>\n    </ul>\n    <div className=\"nav-item d-flex\">\n      <AuthButton />\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const About = () => (\n  <div>\n    <h1>About US</h1>\n    <p>About US page body content</p>\n  </div>\n);\n","import React from 'react';\n\nexport const Home = () => (\n  <div>\n    <h1>Home</h1>\n    <p>Home page body content</p>\n  </div>\n);\n","import React from 'react';\n\nexport const Error = () => (\n  <div>\n    <p>Error: Page does not exist!</p>\n  </div>\n);\n","import React from 'react';\nimport { speak } from '../services/speak';\nimport './index.css';\n\ninterface Props{\n  text:string, children:React.ReactNode\n}\nexport const UtterText = ({ text, children }:Props) => (\n  <div role=\"tooltip\" onClick={() => speak(text)}>\n    {children}\n  </div>\n);\n","export const speak = (text:string) => {\n  const synth = window.speechSynthesis;\n  const utterThis = new SpeechSynthesisUtterance(text);\n  synth.speak(utterThis);\n};\n","import React from 'react';\nimport { useKeyUp } from '../../hooks/useKeyUp';\nimport './index.css';\n\ninterface Props{\n  word:string,\n  content: string,\n  value: number,\n  keyValue: number,\n  onClick: ()=>void\n}\nexport const Answer = ({ word, content, value, keyValue, onClick }:Props) => {\n  console.log(keyValue);\n  useKeyUp(`${keyValue}`, () => { addWord(word, value); onClick(); });\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-lg btn-outline-primary\"\n      onClick={() => { addWord(word, value); onClick(); }}\n    >\n      <div className=\"container d-flex p-0\">\n\n        <span className=\"keyValue\">{keyValue}</span>\n        <span>{content}</span>\n      </div>\n    </button>\n  );\n};\n\nconst addWord = (word:string, value:number, lang = 'en') => {\n  const dictString = localStorage.getItem(`${lang}_words`);\n  if (dictString) {\n    const dict = JSON.parse(dictString);\n    dict[word] = value;\n    localStorage.setItem(`${lang}_words`, JSON.stringify(dict));\n  } else {\n    localStorage.setItem(`${lang}_words`, JSON.stringify({ [word]: value }));\n  }\n};\n\n// const addWord = (word:string, value:number, lang = 'en') => {\n//   firebase.auth().onAuthStateChanged((user) => {\n//     if (user) {\n//       const db = firebase.firestore();\n//       const docRef = db.collection('users').doc(user.uid).collection(`${lang}Dict`).doc(word);\n\n//       docRef.get()\n//         .then((docSnapshot) => {\n//           if (docSnapshot.exists) {\n//             docRef.update({\n//               understanding: value,\n//             });\n//           } else {\n//             docRef.set({ understanding: value });\n//           }\n//         });\n//     }\n//   });\n// };\n","import { useEffect } from 'react';\n\nexport const useKeyUp = (targetKey:string, action:()=>void) => {\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      action();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keyup', upHandler);\n    return () => window.removeEventListener('keyup', upHandler);\n  }, []);\n};\n","import React from 'react';\nimport { UtterText } from '../../components/UtterText';\n\nimport { Answer } from './Answer';\n\ninterface Props{\n  word:string,\n  refresh: ()=>void\n}\n\nexport const Learn = ({ word, refresh }:Props) => (\n  <div className=\"container\" style={{ maxWidth: '768px' }}>\n    <UtterText text={word}>\n      <h1 className=\"speakWord\">{word}</h1>\n    </UtterText>\n    {/* hint */}\n    <div className=\" mt-3 d-flex justify-content-between\">\n      {answersEn.map((el) => <Answer key={`${word}${el.value}`} keyValue={el.key} onClick={refresh} word={word} content={el.content} value={el.value} />)}\n    </div>\n  </div>\n);\n\nconst answersEn = [\n  {\n    content: 'Surely, know',\n    value: 100,\n    key: 1,\n  },\n  {\n    content: 'Hesitate',\n    value: 50,\n    key: 2,\n  },\n  {\n    content: \"Don't know\",\n    value: 1,\n    key: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport { Learn } from './Learn';\n\ninterface Verb{\n  verb: string,\n  verb2: string,\n  verb3: string,\n  gerund: string,\n  '1st'?: string,\n  '2nd'?: string,\n  '3rd'?: string,\n  '3rdPret'?: string\n}\n\ninterface Verbs{\n  _version:number,\n  data:{[word:string]:Verb}\n}\n\nexport const LearnPage = () => {\n  const [state, setState] = useState(false);\n  const refresh = () => {\n    setState(!state);\n  };\n  return (\n    <Learn word={getData()} refresh={refresh} />\n  );\n};\n\nconst dict:Verbs = JSON.parse(localStorage.getItem('verbs') || '{}');\n\nconst getData = () => {\n  console.log(Object.keys(dict.data)[2]);\n\n  return Object.keys(dict.data)[Math.floor(100 * Math.random())];\n};\n","import React from 'react';\n\nimport { WordData } from '../../types';\n\ninterface Props{\n  words:WordData[]\n}\nexport const WordsTable = ({ words }:Props) => (\n  <div className=\"container\">\n    { words\n      ? (\n        <div className=\"container\">\n          {words.map((el) => <Row key={`word${el.value}`} word={el.word} value={el.value} />)}\n        </div>\n      )\n      : null}\n  </div>\n);\n\nconst Row = ({ word, value }:WordData) => (\n  <div className=\"row\">\n    <p>{word + value}</p>\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport firebase from 'firebase';\nimport { useUser } from './useUser';\n\nexport const useUserDict = (lang:string) => {\n  const user = useUser();\n  const [snap, setSnap] = useState<firebase.firestore.DocumentData>();\n  useEffect(() => {\n    if (user) {\n      const db = firebase.firestore();\n      const docRef = db.collection('userDict').doc(`${lang}_${user.uid}`);\n\n      docRef.onSnapshot((docSnapshot) => {\n        if (docSnapshot.exists) {\n          setSnap(docSnapshot.data());\n        }\n      });\n    }\n  },\n  [user]);\n\n  return snap;\n};\n","import React from 'react';\nimport { WordsTable } from './WordsTable';\nimport { WordData } from '../../types';\nimport { useUserDict } from '../../hooks/useUserDict';\n\nexport const WordsPage = () => (\n  <WordsTable words={getWords()} />\n);\n\nconst getWords = (lang = 'en') => {\n  const data : WordData[] = [];\n  const dict = useUserDict(lang);\n  console.log(dict);\n\n  console.log(data);\n\n  return data;\n};\n","import React, { useState } from 'react';\n\ninterface Props{\n    // eslint-disable-next-line no-undef\n    recognition:SpeechRecognition,\n\n}\n\nexport const ListenButton = ({ recognition }:Props) => {\n  const [recording, setRecording] = useState<Boolean>(false);\n\n  if (recognition) {\n    // eslint-disable-next-line no-param-reassign\n    recognition.onend = () => setRecording(false);\n    // eslint-disable-next-line no-param-reassign\n    recognition.onstart = () => setRecording(true);\n  } else {\n    return <span>Not supported</span>;\n  }\n\n  if (!recording) {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => {\n          recognition.start();\n        }}\n      >\n        Start recording\n      </button>\n    );\n  }\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-danger\"\n      onClick={() => {\n        recognition.stop();\n      }}\n    >\n      Stop recording\n    </button>\n  );\n};\n","import React from 'react';\nimport { UtterText } from '../../components/UtterText';\nimport { useListenText } from '../../hooks/useListenText';\nimport { ListenButton } from './ListenButton';\n\ninterface Props{\n    phrase:string,\n  refresh: ()=>void\n}\n\nexport const Speech = ({ phrase, refresh }:Props) => {\n  const { recognition, text } = useListenText();\n  console.log(text);\n\n  return (\n    <div className=\"container\" style={{ maxWidth: '768px' }}>\n      <UtterText text={phrase}>\n        <h1 className=\"speakWord\">{phrase}</h1>\n      </UtterText>\n      {/* hint */}\n      <div className=\" mt-3 d-flex justify-content-between\">\n        <ListenButton recognition={recognition} />\n      </div>\n\n    </div>\n  );\n};\n","/* eslint-disable new-cap */\nimport { useEffect, useState } from 'react';\n\nexport const useListenText = () => {\n  // eslint-disable-next-line no-undef\n  const recognition = new webkitSpeechRecognition();\n  recognition.continuous = false;\n  recognition.lang = 'en-US';\n  recognition.interimResults = false;\n  recognition.maxAlternatives = 1;\n  const [text, setText] = useState('');\n  // const [recording, setRecording] = useState<Boolean>(false);\n  recognition.onresult = (event) => setText(event.results[0][0].transcript);\n  return { recognition, text };\n};\n","import React, { useState } from 'react';\nimport { Speech } from './Speech';\n\nconst phrases = [\n  'I like playing chess',\n  'He likes playing dodge ball',\n];\n\nexport const TrainPage = () => {\n  const [state, setState] = useState(0);\n  const refresh = () => {\n    setState(state + 1);\n  };\n  return (\n    <Speech phrase={getPhrase()} refresh={refresh} />\n  );\n};\n\nconst getPhrase = () => phrases[Math.floor(Math.random() * phrases.length)];\n","import React from 'react';\nimport { BrowserRouter, Route, RouteProps, Switch } from 'react-router-dom';\nimport './App.css';\nimport './services/auth';\nimport './services/localStorage';\nimport { Navigation } from './components/Navigation';\nimport { About } from './components/About';\nimport { Home } from './components/Home';\nimport { Error } from './components/Error';\nimport { LearnPage } from './pages/LearnPage';\nimport { WordsPage } from './pages/WordsPage';\nimport { useUser } from './hooks/useUser';\nimport { TrainPage } from './pages/TrainPage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navigation />\n        <div className=\"container\" style={{ maxWidth: '768px' }}>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/about\" component={About} />\n            <GuardedRoute path=\"/learn\" component={LearnPage} />\n            <GuardedRoute path=\"/words\" component={WordsPage} />\n            <Route path=\"/train\" component={TrainPage} />\n            <Route component={Error} />\n          </Switch>\n        </div>\n      </div>\n      <div>\n        <p className=\"output\">1</p>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\nconst GuardedRoute : React.FC<RouteProps> = ({ component, ...props }) => {\n  const user = useUser();\n  if (!user) {\n    return <Route {...props} component={Home} />;\n  }\n  return (\n    <Route {...props} component={component} />\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}